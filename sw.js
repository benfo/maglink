try{self["workbox:core:7.2.0"]&&_()}catch{}const V=(s,...e)=>{let t=s;return e.length>0&&(t+=` :: ${JSON.stringify(e)}`),t},$=V;class h extends Error{constructor(e,t){const n=$(e,t);super(n),this.name=e,this.details=t}}const f={googleAnalytics:"googleAnalytics",precache:"precache-v2",prefix:"workbox",runtime:"runtime",suffix:typeof registration<"u"?registration.scope:""},P=s=>[f.prefix,s,f.suffix].filter(e=>e&&e.length>0).join("-"),G=s=>{for(const e of Object.keys(f))s(e)},b={updateDetails:s=>{G(e=>{typeof s[e]=="string"&&(f[e]=s[e])})},getGoogleAnalyticsName:s=>s||P(f.googleAnalytics),getPrecacheName:s=>s||P(f.precache),getPrefix:()=>f.prefix,getRuntimeName:s=>s||P(f.runtime),getSuffix:()=>f.suffix};function M(s,e){const t=e();return s.waitUntil(t),t}try{self["workbox:precaching:7.2.0"]&&_()}catch{}const Q="__WB_REVISION__";function z(s){if(!s)throw new h("add-to-cache-list-unexpected-type",{entry:s});if(typeof s=="string"){const c=new URL(s,location.href);return{cacheKey:c.href,url:c.href}}const{revision:e,url:t}=s;if(!t)throw new h("add-to-cache-list-unexpected-type",{entry:s});if(!e){const c=new URL(t,location.href);return{cacheKey:c.href,url:c.href}}const n=new URL(t,location.href),r=new URL(t,location.href);return n.searchParams.set(Q,e),{cacheKey:n.href,url:r.href}}class J{constructor(){this.updatedURLs=[],this.notUpdatedURLs=[],this.handlerWillStart=async({request:e,state:t})=>{t&&(t.originalRequest=e)},this.cachedResponseWillBeUsed=async({event:e,state:t,cachedResponse:n})=>{if(e.type==="install"&&t&&t.originalRequest&&t.originalRequest instanceof Request){const r=t.originalRequest.url;n?this.notUpdatedURLs.push(r):this.updatedURLs.push(r)}return n}}}class X{constructor({precacheController:e}){this.cacheKeyWillBeUsed=async({request:t,params:n})=>{const r=(n==null?void 0:n.cacheKey)||this._precacheController.getCacheKeyForURL(t.url);return r?new Request(r,{headers:t.headers}):t},this._precacheController=e}}let p;function Y(){if(p===void 0){const s=new Response("");if("body"in s)try{new Response(s.body),p=!0}catch{p=!1}p=!1}return p}async function Z(s,e){let t=null;if(s.url&&(t=new URL(s.url).origin),t!==self.location.origin)throw new h("cross-origin-copy-response",{origin:t});const n=s.clone(),c={headers:new Headers(n.headers),status:n.status,statusText:n.statusText},a=Y()?n.body:await n.blob();return new Response(a,c)}const ee=s=>new URL(String(s),location.href).href.replace(new RegExp(`^${location.origin}`),"");function N(s,e){const t=new URL(s);for(const n of e)t.searchParams.delete(n);return t.href}async function te(s,e,t,n){const r=N(e.url,t);if(e.url===r)return s.match(e,n);const c=Object.assign(Object.assign({},n),{ignoreSearch:!0}),a=await s.keys(e,c);for(const i of a){const o=N(i.url,t);if(r===o)return s.match(i,n)}}class se{constructor(){this.promise=new Promise((e,t)=>{this.resolve=e,this.reject=t})}}const ne=new Set;async function re(){for(const s of ne)await s()}function ae(s){return new Promise(e=>setTimeout(e,s))}try{self["workbox:strategies:7.2.0"]&&_()}catch{}function R(s){return typeof s=="string"?new Request(s):s}class ce{constructor(e,t){this._cacheKeys={},Object.assign(this,t),this.event=t.event,this._strategy=e,this._handlerDeferred=new se,this._extendLifetimePromises=[],this._plugins=[...e.plugins],this._pluginStateMap=new Map;for(const n of this._plugins)this._pluginStateMap.set(n,{});this.event.waitUntil(this._handlerDeferred.promise)}async fetch(e){const{event:t}=this;let n=R(e);if(n.mode==="navigate"&&t instanceof FetchEvent&&t.preloadResponse){const a=await t.preloadResponse;if(a)return a}const r=this.hasCallback("fetchDidFail")?n.clone():null;try{for(const a of this.iterateCallbacks("requestWillFetch"))n=await a({request:n.clone(),event:t})}catch(a){if(a instanceof Error)throw new h("plugin-error-request-will-fetch",{thrownErrorMessage:a.message})}const c=n.clone();try{let a;a=await fetch(n,n.mode==="navigate"?void 0:this._strategy.fetchOptions);for(const i of this.iterateCallbacks("fetchDidSucceed"))a=await i({event:t,request:c,response:a});return a}catch(a){throw r&&await this.runCallbacks("fetchDidFail",{error:a,event:t,originalRequest:r.clone(),request:c.clone()}),a}}async fetchAndCachePut(e){const t=await this.fetch(e),n=t.clone();return this.waitUntil(this.cachePut(e,n)),t}async cacheMatch(e){const t=R(e);let n;const{cacheName:r,matchOptions:c}=this._strategy,a=await this.getCacheKey(t,"read"),i=Object.assign(Object.assign({},c),{cacheName:r});n=await caches.match(a,i);for(const o of this.iterateCallbacks("cachedResponseWillBeUsed"))n=await o({cacheName:r,matchOptions:c,cachedResponse:n,request:a,event:this.event})||void 0;return n}async cachePut(e,t){const n=R(e);await ae(0);const r=await this.getCacheKey(n,"write");if(!t)throw new h("cache-put-with-no-response",{url:ee(r.url)});const c=await this._ensureResponseSafeToCache(t);if(!c)return!1;const{cacheName:a,matchOptions:i}=this._strategy,o=await self.caches.open(a),l=this.hasCallback("cacheDidUpdate"),y=l?await te(o,r.clone(),["__WB_REVISION__"],i):null;try{await o.put(r,l?c.clone():c)}catch(u){if(u instanceof Error)throw u.name==="QuotaExceededError"&&await re(),u}for(const u of this.iterateCallbacks("cacheDidUpdate"))await u({cacheName:a,oldResponse:y,newResponse:c.clone(),request:r,event:this.event});return!0}async getCacheKey(e,t){const n=`${e.url} | ${t}`;if(!this._cacheKeys[n]){let r=e;for(const c of this.iterateCallbacks("cacheKeyWillBeUsed"))r=R(await c({mode:t,request:r,event:this.event,params:this.params}));this._cacheKeys[n]=r}return this._cacheKeys[n]}hasCallback(e){for(const t of this._strategy.plugins)if(e in t)return!0;return!1}async runCallbacks(e,t){for(const n of this.iterateCallbacks(e))await n(t)}*iterateCallbacks(e){for(const t of this._strategy.plugins)if(typeof t[e]=="function"){const n=this._pluginStateMap.get(t);yield c=>{const a=Object.assign(Object.assign({},c),{state:n});return t[e](a)}}}waitUntil(e){return this._extendLifetimePromises.push(e),e}async doneWaiting(){let e;for(;e=this._extendLifetimePromises.shift();)await e}destroy(){this._handlerDeferred.resolve(null)}async _ensureResponseSafeToCache(e){let t=e,n=!1;for(const r of this.iterateCallbacks("cacheWillUpdate"))if(t=await r({request:this.request,response:t,event:this.event})||void 0,n=!0,!t)break;return n||t&&t.status!==200&&(t=void 0),t}}class ie{constructor(e={}){this.cacheName=b.getRuntimeName(e.cacheName),this.plugins=e.plugins||[],this.fetchOptions=e.fetchOptions,this.matchOptions=e.matchOptions}handle(e){const[t]=this.handleAll(e);return t}handleAll(e){e instanceof FetchEvent&&(e={event:e,request:e.request});const t=e.event,n=typeof e.request=="string"?new Request(e.request):e.request,r="params"in e?e.params:void 0,c=new ce(this,{event:t,request:n,params:r}),a=this._getResponse(c,n,t),i=this._awaitComplete(a,c,n,t);return[a,i]}async _getResponse(e,t,n){await e.runCallbacks("handlerWillStart",{event:n,request:t});let r;try{if(r=await this._handle(t,e),!r||r.type==="error")throw new h("no-response",{url:t.url})}catch(c){if(c instanceof Error){for(const a of e.iterateCallbacks("handlerDidError"))if(r=await a({error:c,event:n,request:t}),r)break}if(!r)throw c}for(const c of e.iterateCallbacks("handlerWillRespond"))r=await c({event:n,request:t,response:r});return r}async _awaitComplete(e,t,n,r){let c,a;try{c=await e}catch{}try{await t.runCallbacks("handlerDidRespond",{event:r,request:n,response:c}),await t.doneWaiting()}catch(i){i instanceof Error&&(a=i)}if(await t.runCallbacks("handlerDidComplete",{event:r,request:n,response:c,error:a}),t.destroy(),a)throw a}}class d extends ie{constructor(e={}){e.cacheName=b.getPrecacheName(e.cacheName),super(e),this._fallbackToNetwork=e.fallbackToNetwork!==!1,this.plugins.push(d.copyRedirectedCacheableResponsesPlugin)}async _handle(e,t){const n=await t.cacheMatch(e);return n||(t.event&&t.event.type==="install"?await this._handleInstall(e,t):await this._handleFetch(e,t))}async _handleFetch(e,t){let n;const r=t.params||{};if(this._fallbackToNetwork){const c=r.integrity,a=e.integrity,i=!a||a===c;n=await t.fetch(new Request(e,{integrity:e.mode!=="no-cors"?a||c:void 0})),c&&i&&e.mode!=="no-cors"&&(this._useDefaultCacheabilityPluginIfNeeded(),await t.cachePut(e,n.clone()))}else throw new h("missing-precache-entry",{cacheName:this.cacheName,url:e.url});return n}async _handleInstall(e,t){this._useDefaultCacheabilityPluginIfNeeded();const n=await t.fetch(e);if(!await t.cachePut(e,n.clone()))throw new h("bad-precaching-response",{url:e.url,status:n.status});return n}_useDefaultCacheabilityPluginIfNeeded(){let e=null,t=0;for(const[n,r]of this.plugins.entries())r!==d.copyRedirectedCacheableResponsesPlugin&&(r===d.defaultPrecacheCacheabilityPlugin&&(e=n),r.cacheWillUpdate&&t++);t===0?this.plugins.push(d.defaultPrecacheCacheabilityPlugin):t>1&&e!==null&&this.plugins.splice(e,1)}}d.defaultPrecacheCacheabilityPlugin={async cacheWillUpdate({response:s}){return!s||s.status>=400?null:s}};d.copyRedirectedCacheableResponsesPlugin={async cacheWillUpdate({response:s}){return s.redirected?await Z(s):s}};class oe{constructor({cacheName:e,plugins:t=[],fallbackToNetwork:n=!0}={}){this._urlsToCacheKeys=new Map,this._urlsToCacheModes=new Map,this._cacheKeysToIntegrities=new Map,this._strategy=new d({cacheName:b.getPrecacheName(e),plugins:[...t,new X({precacheController:this})],fallbackToNetwork:n}),this.install=this.install.bind(this),this.activate=this.activate.bind(this)}get strategy(){return this._strategy}precache(e){this.addToCacheList(e),this._installAndActiveListenersAdded||(self.addEventListener("install",this.install),self.addEventListener("activate",this.activate),this._installAndActiveListenersAdded=!0)}addToCacheList(e){const t=[];for(const n of e){typeof n=="string"?t.push(n):n&&n.revision===void 0&&t.push(n.url);const{cacheKey:r,url:c}=z(n),a=typeof n!="string"&&n.revision?"reload":"default";if(this._urlsToCacheKeys.has(c)&&this._urlsToCacheKeys.get(c)!==r)throw new h("add-to-cache-list-conflicting-entries",{firstEntry:this._urlsToCacheKeys.get(c),secondEntry:r});if(typeof n!="string"&&n.integrity){if(this._cacheKeysToIntegrities.has(r)&&this._cacheKeysToIntegrities.get(r)!==n.integrity)throw new h("add-to-cache-list-conflicting-integrities",{url:c});this._cacheKeysToIntegrities.set(r,n.integrity)}if(this._urlsToCacheKeys.set(c,r),this._urlsToCacheModes.set(c,a),t.length>0){const i=`Workbox is precaching URLs without revision info: ${t.join(", ")}
This is generally NOT safe. Learn more at https://bit.ly/wb-precache`;console.warn(i)}}}install(e){return M(e,async()=>{const t=new J;this.strategy.plugins.push(t);for(const[c,a]of this._urlsToCacheKeys){const i=this._cacheKeysToIntegrities.get(a),o=this._urlsToCacheModes.get(c),l=new Request(c,{integrity:i,cache:o,credentials:"same-origin"});await Promise.all(this.strategy.handleAll({params:{cacheKey:a},request:l,event:e}))}const{updatedURLs:n,notUpdatedURLs:r}=t;return{updatedURLs:n,notUpdatedURLs:r}})}activate(e){return M(e,async()=>{const t=await self.caches.open(this.strategy.cacheName),n=await t.keys(),r=new Set(this._urlsToCacheKeys.values()),c=[];for(const a of n)r.has(a.url)||(await t.delete(a),c.push(a.url));return{deletedURLs:c}})}getURLsToCacheKeys(){return this._urlsToCacheKeys}getCachedURLs(){return[...this._urlsToCacheKeys.keys()]}getCacheKeyForURL(e){const t=new URL(e,location.href);return this._urlsToCacheKeys.get(t.href)}getIntegrityForCacheKey(e){return this._cacheKeysToIntegrities.get(e)}async matchPrecache(e){const t=e instanceof Request?e.url:e,n=this.getCacheKeyForURL(t);if(n)return(await self.caches.open(this.strategy.cacheName)).match(n)}createHandlerBoundToURL(e){const t=this.getCacheKeyForURL(e);if(!t)throw new h("non-precached-url",{url:e});return n=>(n.request=new Request(e),n.params=Object.assign({cacheKey:t},n.params),this.strategy.handle(n))}}let U;const j=()=>(U||(U=new oe),U);try{self["workbox:routing:7.2.0"]&&_()}catch{}const q="GET",C=s=>s&&typeof s=="object"?s:{handle:s};class m{constructor(e,t,n=q){this.handler=C(t),this.match=e,this.method=n}setCatchHandler(e){this.catchHandler=C(e)}}class le extends m{constructor(e,t,n){const r=({url:c})=>{const a=e.exec(c.href);if(a&&!(c.origin!==location.origin&&a.index!==0))return a.slice(1)};super(r,t,n)}}class he{constructor(){this._routes=new Map,this._defaultHandlerMap=new Map}get routes(){return this._routes}addFetchListener(){self.addEventListener("fetch",e=>{const{request:t}=e,n=this.handleRequest({request:t,event:e});n&&e.respondWith(n)})}addCacheListener(){self.addEventListener("message",e=>{if(e.data&&e.data.type==="CACHE_URLS"){const{payload:t}=e.data,n=Promise.all(t.urlsToCache.map(r=>{typeof r=="string"&&(r=[r]);const c=new Request(...r);return this.handleRequest({request:c,event:e})}));e.waitUntil(n),e.ports&&e.ports[0]&&n.then(()=>e.ports[0].postMessage(!0))}})}handleRequest({request:e,event:t}){const n=new URL(e.url,location.href);if(!n.protocol.startsWith("http"))return;const r=n.origin===location.origin,{params:c,route:a}=this.findMatchingRoute({event:t,request:e,sameOrigin:r,url:n});let i=a&&a.handler;const o=e.method;if(!i&&this._defaultHandlerMap.has(o)&&(i=this._defaultHandlerMap.get(o)),!i)return;let l;try{l=i.handle({url:n,request:e,event:t,params:c})}catch(u){l=Promise.reject(u)}const y=a&&a.catchHandler;return l instanceof Promise&&(this._catchHandler||y)&&(l=l.catch(async u=>{if(y)try{return await y.handle({url:n,request:e,event:t,params:c})}catch(x){x instanceof Error&&(u=x)}if(this._catchHandler)return this._catchHandler.handle({url:n,request:e,event:t});throw u})),l}findMatchingRoute({url:e,sameOrigin:t,request:n,event:r}){const c=this._routes.get(n.method)||[];for(const a of c){let i;const o=a.match({url:e,sameOrigin:t,request:n,event:r});if(o)return i=o,(Array.isArray(i)&&i.length===0||o.constructor===Object&&Object.keys(o).length===0||typeof o=="boolean")&&(i=void 0),{route:a,params:i}}return{}}setDefaultHandler(e,t=q){this._defaultHandlerMap.set(t,C(e))}setCatchHandler(e){this._catchHandler=C(e)}registerRoute(e){this._routes.has(e.method)||this._routes.set(e.method,[]),this._routes.get(e.method).push(e)}unregisterRoute(e){if(!this._routes.has(e.method))throw new h("unregister-route-but-not-found-with-method",{method:e.method});const t=this._routes.get(e.method).indexOf(e);if(t>-1)this._routes.get(e.method).splice(t,1);else throw new h("unregister-route-route-not-registered")}}let w;const ue=()=>(w||(w=new he,w.addFetchListener(),w.addCacheListener()),w);function fe(s,e,t){let n;if(typeof s=="string"){const c=new URL(s,location.href),a=({url:i})=>i.href===c.href;n=new m(a,e,t)}else if(s instanceof RegExp)n=new le(s,e,t);else if(typeof s=="function")n=new m(s,e,t);else if(s instanceof m)n=s;else throw new h("unsupported-route-type",{moduleName:"workbox-routing",funcName:"registerRoute",paramName:"capture"});return ue().registerRoute(n),n}function de(s,e=[]){for(const t of[...s.searchParams.keys()])e.some(n=>n.test(t))&&s.searchParams.delete(t);return s}function*ge(s,{ignoreURLParametersMatching:e=[/^utm_/,/^fbclid$/],directoryIndex:t="index.html",cleanURLs:n=!0,urlManipulation:r}={}){const c=new URL(s,location.href);c.hash="",yield c.href;const a=de(c,e);if(yield a.href,t&&a.pathname.endsWith("/")){const i=new URL(a.href);i.pathname+=t,yield i.href}if(n){const i=new URL(a.href);i.pathname+=".html",yield i.href}if(r){const i=r({url:c});for(const o of i)yield o.href}}class ye extends m{constructor(e,t){const n=({request:r})=>{const c=e.getURLsToCacheKeys();for(const a of ge(r.url,t)){const i=c.get(a);if(i){const o=e.getIntegrityForCacheKey(i);return{cacheKey:i,integrity:o}}}};super(n,e.strategy)}}function pe(s){const e=j(),t=new ye(e,s);fe(t)}const we="-precache-",me=async(s,e=we)=>{const n=(await self.caches.keys()).filter(r=>r.includes(e)&&r.includes(self.registration.scope)&&r!==s);return await Promise.all(n.map(r=>self.caches.delete(r))),n};function Re(){self.addEventListener("activate",s=>{const e=b.getPrecacheName();s.waitUntil(me(e).then(t=>{}))})}function Ce(s){j().precache(s)}function be(s,e){Ce(s),pe(e)}function _e(){self.addEventListener("activate",()=>self.clients.claim())}const D=(s,e)=>e.some(t=>s instanceof t);let O,S;function Le(){return O||(O=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function Pe(){return S||(S=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const K=new WeakMap,k=new WeakMap,L=new WeakMap;function Ue(s){const e=new Promise((t,n)=>{const r=()=>{s.removeEventListener("success",c),s.removeEventListener("error",a)},c=()=>{t(g(s.result)),r()},a=()=>{n(s.error),r()};s.addEventListener("success",c),s.addEventListener("error",a)});return L.set(e,s),e}function ke(s){if(K.has(s))return;const e=new Promise((t,n)=>{const r=()=>{s.removeEventListener("complete",c),s.removeEventListener("error",a),s.removeEventListener("abort",a)},c=()=>{t(),r()},a=()=>{n(s.error||new DOMException("AbortError","AbortError")),r()};s.addEventListener("complete",c),s.addEventListener("error",a),s.addEventListener("abort",a)});K.set(s,e)}let T={get(s,e,t){if(s instanceof IDBTransaction){if(e==="done")return K.get(s);if(e==="store")return t.objectStoreNames[1]?void 0:t.objectStore(t.objectStoreNames[0])}return g(s[e])},set(s,e,t){return s[e]=t,!0},has(s,e){return s instanceof IDBTransaction&&(e==="done"||e==="store")?!0:e in s}};function F(s){T=s(T)}function Ie(s){return Pe().includes(s)?function(...e){return s.apply(E(this),e),g(this.request)}:function(...e){return g(s.apply(E(this),e))}}function De(s){return typeof s=="function"?Ie(s):(s instanceof IDBTransaction&&ke(s),D(s,Le())?new Proxy(s,T):s)}function g(s){if(s instanceof IDBRequest)return Ue(s);if(k.has(s))return k.get(s);const e=De(s);return e!==s&&(k.set(s,e),L.set(e,s)),e}const E=s=>L.get(s);function Ke(s,e,{blocked:t,upgrade:n,blocking:r,terminated:c}={}){const a=indexedDB.open(s,e),i=g(a);return n&&a.addEventListener("upgradeneeded",o=>{n(g(a.result),o.oldVersion,o.newVersion,g(a.transaction),o)}),t&&a.addEventListener("blocked",o=>t(o.oldVersion,o.newVersion,o)),i.then(o=>{c&&o.addEventListener("close",()=>c()),r&&o.addEventListener("versionchange",l=>r(l.oldVersion,l.newVersion,l))}).catch(()=>{}),i}const Te=["get","getKey","getAll","getAllKeys","count"],Ee=["put","add","delete","clear"],I=new Map;function B(s,e){if(!(s instanceof IDBDatabase&&!(e in s)&&typeof e=="string"))return;if(I.get(e))return I.get(e);const t=e.replace(/FromIndex$/,""),n=e!==t,r=Ee.includes(t);if(!(t in(n?IDBIndex:IDBObjectStore).prototype)||!(r||Te.includes(t)))return;const c=async function(a,...i){const o=this.transaction(a,r?"readwrite":"readonly");let l=o.store;return n&&(l=l.index(i.shift())),(await Promise.all([l[t](...i),r&&o.done]))[0]};return I.set(e,c),c}F(s=>({...s,get:(e,t,n)=>B(e,t)||s.get(e,t,n),has:(e,t)=>!!B(e,t)||s.has(e,t)}));const ve=["continue","continuePrimaryKey","advance"],W={},v=new WeakMap,H=new WeakMap,xe={get(s,e){if(!ve.includes(e))return s[e];let t=W[e];return t||(t=W[e]=function(...n){v.set(this,H.get(this)[e](...n))}),t}};async function*Me(...s){let e=this;if(e instanceof IDBCursor||(e=await e.openCursor(...s)),!e)return;e=e;const t=new Proxy(e,xe);for(H.set(t,e),L.set(t,E(e));e;)yield t,e=await(v.get(t)||e.continue()),v.delete(t)}function A(s,e){return e===Symbol.asyncIterator&&D(s,[IDBIndex,IDBObjectStore,IDBCursor])||e==="iterate"&&D(s,[IDBIndex,IDBObjectStore])}F(s=>({...s,get(e,t,n){return A(e,t)?Me:s.get(e,t,n)},has(e,t){return A(e,t)||s.has(e,t)}}));Re();_e();be([{"revision":null,"url":"assets/index-BHNTlfu5.css"},{"revision":null,"url":"assets/index-CcRihGYZ.js"},{"revision":"3885f2906a3e18708746f5884db192cb","url":"index.html"},{"revision":"42cf5eed87eebf6bd7e9cf9d998afecf","url":"registerSW.js"},{"revision":"3dae0cf2b94439ee60b4673d79f92adc","url":"apple-touch-icon.png"},{"revision":"b793da0ff836d420ead91cd3569df02f","url":"favicon.ico"},{"revision":"1822ca95a8ab0b9e5cdb5f324670f8b7","url":"manifest.webmanifest"}]);async function Ne(){return Ke("share-db",1,{upgrade(s){s.objectStoreNames.contains("shared")||s.createObjectStore("shared",{keyPath:"id",autoIncrement:!0})}})}async function Oe(s){const e=await Ne(),t=s.trim();await e.add("shared",{text:t})}self.addEventListener("fetch",s=>{new URL(s.request.url).pathname==="/maglink/share-target"&&s.request.method==="POST"&&s.respondWith((async()=>{const n=(await s.request.formData()).get("text")||"";return await Oe(n),Response.redirect("/maglink/incoming-share",303)})())});
